name: Release

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'  # Semver pattern (e.g., 1.0.3)

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      BINARY_NAME_LINUX: builder-cli-linux  # Definimos la variable aqu√≠
      BINARY_NAME_WINDOWS: builder-cli-windows.exe
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.21.3

    - name: Install dependencies
      run: go mod download

    - name: Build Linux binary
      run: CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o ${{ env.BINARY_NAME_LINUX }} .
      
    - name: Build Windows binary
      run: CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -o ${{ env.BINARY_NAME_WINDOWS }} .
    
    - name: Create GitHub Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
          tag_name: ${{ github.ref_name }}
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: false
          generate_release_notes: true

    - name: Upload Linux binary to release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ env.BINARY_NAME_LINUX }}
        asset_name: ${{ env.BINARY_NAME_LINUX }}
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Windows binary to release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ env.BINARY_NAME_WINDOWS }}
        asset_name: ${{ env.BINARY_NAME_WINDOWS }}
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
